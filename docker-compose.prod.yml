# Production Docker Compose configuration
version: '3.8'

services:
  rowt-ui:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ROWT_API_ENDPOINT=${ROWT_API_ENDPOINT:-https://your-rowt-server.com}
        - NODE_ENV=${NODE_ENV:-production}
        - BUILD_MODE=production
    container_name: rowt-ui-prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rowt-ui.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.rowt-ui.tls=true"
      - "traefik.http.routers.rowt-ui.tls.certresolver=letsencrypt"
      - "traefik.http.services.rowt-ui.loadbalancer.server.port=80"
    networks:
      - rowt-network
      - traefik-network

  # Optional: Add Traefik reverse proxy for production
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
    restart: unless-stopped
    profiles:
      - traefik
    networks:
      - traefik-network

networks:
  rowt-network:
    driver: bridge
    name: rowt-network
  traefik-network:
    external: true
    name: traefik-network

volumes:
  traefik-letsencrypt:
